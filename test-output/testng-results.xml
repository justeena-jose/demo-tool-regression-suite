<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-31T19:07:51 IST" name="Default suite" finished-at="2024-10-31T19:08:37 IST" duration-ms="46263">
    <groups>
    </groups>
    <test started-at="2024-10-31T19:07:51 IST" name="Default test" finished-at="2024-10-31T19:08:37 IST" duration-ms="46263">
      <class name="com.regression.test.SearchTest">
        <test-method is-config="true" signature="Report_Setup()[pri:0, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:07:51 IST" name="Report_Setup" finished-at="2024-10-31T19:07:51 IST" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Report_Setup -->
        <test-method is-config="true" signature="initClass()[pri:0, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:07:51 IST" name="initClass" finished-at="2024-10-31T19:07:53 IST" duration-ms="1819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initClass -->
        <test-method signature="NavigateToHomePage()[pri:1, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:07:53 IST" name="NavigateToHomePage" finished-at="2024-10-31T19:07:58 IST" duration-ms="5655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToHomePage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:07:58 IST" name="getResult" finished-at="2024-10-31T19:07:58 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NavigateToHomePage status=SUCCESS method=SearchTest.NavigateToHomePage()[pri:1, instance:com.regression.test.SearchTest@1da6ee17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="ProductDetailPage()[pri:2, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:07:58 IST" name="ProductDetailPage" finished-at="2024-10-31T19:08:08 IST" duration-ms="10217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductDetailPage -->
        <test-method signature="AddToCart()[pri:3, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:08:08 IST" name="AddToCart" finished-at="2024-10-31T19:08:25 IST" duration-ms="16244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddToCart -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:08:08 IST" name="getResult" finished-at="2024-10-31T19:08:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ProductDetailPage status=SUCCESS method=SearchTest.ProductDetailPage()[pri:2, instance:com.regression.test.SearchTest@1da6ee17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:08:25 IST" name="getResult" finished-at="2024-10-31T19:08:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddToCart status=SUCCESS method=SearchTest.AddToCart()[pri:3, instance:com.regression.test.SearchTest@1da6ee17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="CheckOUT()[pri:4, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:08:25 IST" name="CheckOUT" finished-at="2024-10-31T19:08:30 IST" duration-ms="5176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckOUT -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:08:30 IST" name="getResult" finished-at="2024-10-31T19:08:30 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckOUT status=SUCCESS method=SearchTest.CheckOUT()[pri:4, instance:com.regression.test.SearchTest@1da6ee17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="LoginandPay()[pri:5, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:08:30 IST" name="LoginandPay" finished-at="2024-10-31T19:08:35 IST" duration-ms="5352" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.regression.test.SearchTest.LoginandPay(SearchTest.java:153)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginandPay -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:08:35 IST" name="getResult" finished-at="2024-10-31T19:08:36 IST" duration-ms="306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginandPay status=FAILURE method=SearchTest.LoginandPay()[pri:5, instance:com.regression.test.SearchTest@1da6ee17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="finish()[pri:0, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:08:36 IST" name="finish" finished-at="2024-10-31T19:08:36 IST" duration-ms="323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method is-config="true" signature="updateReport()[pri:0, instance:com.regression.test.SearchTest@1da6ee17]" started-at="2024-10-31T19:08:36 IST" name="updateReport" finished-at="2024-10-31T19:08:37 IST" duration-ms="1101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateReport -->
      </class> <!-- com.regression.test.SearchTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
